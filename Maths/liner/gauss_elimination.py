
import numpy as np
# --- 增广矩阵
A = np.array([[1, -2, 1, -4, 4],
              [0, 1, -1, 1, -3],
              [1, 3, 0, 1, 1],
              [0, -7, 3, 1, -3]])
print("Original\n----------\n{}\n----------".format(A))

# --- 消元矩阵
E = np.array([[1, 0, 0, 0],
              [0, 1, 0, 0],
              [-1, -5, 1, 0],
              [-1, 2, 1, 1]])

S = np.dot(E, A)
print("Elimination\n----------\n{}\n----------".format(S))

# --- 回代矩阵
"""
E1 : 第一行 = 第二行的2倍 + 第三行的-1倍 + 第四行的4倍; 第2,3,4行不变
E1 是倒推的,其实是回代的最后一步了,已经接近单位矩阵了,先进行的是E3点乘S,E2再点乘E3*S的结果
"""
E1 = np.array([[1, 2, -1, 4],
               [0, 1, 0, 0],
               [0, 0, 1, 0],
               [0, 0, 0, 1]])
E2 = np.array([[1, 0, 0, 0],
               [0, 1, 1, -1],
               [0, 0, 1, 0],
               [0, 0, 0, 1]])
E3 = np.array([[1, 0, 0, 0],
               [0, 1, 0, 0],
               [0, 0, 1 / 4, 0],
               [0, 0, 0, 1 / 8]])
E4 = np.dot(np.dot(E1, E2), E3)
print("Revert in\n----------\n{}\n----------".format(E4))

# --- 单位矩阵
SE = np.dot(E4, S)
print("Unit\n----------\n{}\n----------".format(SE))
